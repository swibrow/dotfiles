# Optimized .zshrc for faster startup
# Key optimizations:
# 1. Lazy loading for slow tools (nvm, pyenv, etc.)
# 2. Conditional loading based on command availability
# 3. Deferred completion loading
# 4. Cached environment variables

# Early exit for non-interactive shells
[[ $- != *i* ]] && return

# Architecture-based Homebrew setup (cached)
if [ -z "$HOMEBREW_PREFIX" ]; then
    if [ "$(arch)" = arm64 ]; then
        export HOMEBREW_PREFIX="/opt/homebrew"
    else
        export HOMEBREW_PREFIX="/usr/local"
    fi
fi

# Homebrew environment (faster than eval)
export PATH="$HOMEBREW_PREFIX/bin:$HOMEBREW_PREFIX/sbin:$PATH"
export MANPATH="$HOMEBREW_PREFIX/share/man:$MANPATH"
export INFOPATH="$HOMEBREW_PREFIX/share/info:$INFOPATH"

# Core PATH setup (combined into one export)
export PATH="$PATH:$HOME/bin:${KREW_ROOT:-$HOME/.krew}/bin:$HOME/go/bin:$HOME/.local/bin:/usr/local/opt/ruby/bin:/opt/homebrew/opt/ruby/bin:$HOME/.tfenv/bin"

# Lazy load Go environment
if command -v go &>/dev/null; then
    export GOROOT="$(go env GOROOT)"
    export PATH="$PATH:$GOROOT/bin"
fi

# Fast prompt initialization
export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
eval "$(starship init zsh)"

# Environment variables (grouped)
export HOMEBREW_BUNDLE_FILE="$HOME/.config/homebrew/Brewfile"
export HOMEBREW_BUNDLE_LOCK=1
export LANG=en_US.UTF-8
export AWS_VAULT_BACKEND=keychain
export K9S_CONFIG_DIR="$HOME/.config/k9s"
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"
export GPG_TTY=$(tty)
export EDITOR='vim'
export CR_OWNER=swibrow
export CR_GIT_REPO=pitower-charts
export CR_PACKAGE_PATH=.deploy
export CR_GIT_BASE_URL="https://api.github.com/"
export CR_GIT_UPLOAD_URL="https://uploads.github.com/"
export CR_SKIP_EXISTING=true
export FZF_CTRL_T_OPTS="--preview='bat --color=always --style=header,grid --line-range :500 {}'"
export CARAPACE_BRIDGES='zsh,fish,bash,inshellisense'

# FZF theme
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--multi"

# Antidote plugin manager (optimized)
export ANTIDOTE_HOME=~/.cache/antidote
source $HOMEBREW_PREFIX/opt/antidote/share/antidote/antidote.zsh
zsh_plugins=${ZDOTDIR:-~}/.config/zsh/plugins

# Generate static plugin file if needed
if [[ ! ${zsh_plugins}.zsh -nt ${zsh_plugins}.txt ]]; then
  antidote bundle <${zsh_plugins}.txt >|${zsh_plugins}.zsh
fi
source ${zsh_plugins}.zsh

# Source function files
source $HOME/.config/zsh/functions/general.zsh
source $HOME/.config/zsh/functions/kubectl.zsh
source $HOME/.config/zsh/functions/terraform.zsh
source $HOME/.config/zsh/aliases.zsh

# Lazy load NVM (major performance improvement)
export NVM_DIR="$HOME/.nvm"
nvm() {
    unset -f nvm
    [ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
    nvm "$@"
}

# Lazy load pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
pyenv() {
    unset -f pyenv
    eval "$(command pyenv init -)"
    pyenv "$@"
}

# Lazy load Angular CLI completion
ng() {
    unset -f ng
    source <(command ng completion script)
    ng "$@"
}

# GPG agent (only if not already running)
if ! pgrep -x gpg-agent >/dev/null; then
    gpgconf --launch gpg-agent
fi

# Completion setup (deferred)
() {
    # Basic completion setup
    autoload -Uz compinit
    
    # Use completion cache and check once per day
    local zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
    if [[ $zcompdump -nt /usr/share/zsh ]] && [[ ! $zcompdump.zwc -ot $zcompdump ]]; then
        compinit -C
    else
        compinit
        [[ -f "$zcompdump" && ! -f "$zcompdump.zwc" ]] && zcompile "$zcompdump"
    fi
    
    # Defer heavy completions to background
    {
        # Only load completions for installed tools
        command -v cr &>/dev/null && source <(cr completion zsh)
        command -v talosctl &>/dev/null && source <(talosctl completion zsh)
        command -v kubectl &>/dev/null && source <(kubectl datadog completion zsh)
        command -v kubebuilder &>/dev/null && source <(kubebuilder completion zsh)
        command -v fzf &>/dev/null && source <(fzf --zsh)
        command -v carapace &>/dev/null && source <(carapace _carapace)
    } &!
}

# Style settings
zstyle ':completion:*' format $'\e[2;37mCompleting %d\e[m'

# Claude alias
alias claude="/Users/bcfd@mediait.ch/.claude/local/claude"